---
version: 2
jobs:
  build:
    working_directory: ~/nzif
    docker:
      - image: circleci/ruby:2.4.2-node-browsers
        environment:
          PGHOST: localhost
          PGUSER: nzif
          RAILS_ENV: test
          CC_TEST_REPORTER_ID: eb44112dcf870432644cab6aa559ff727e61b24e71b55a400e8dfef0fdb74e15
      - image: postgres:10.1
        environment:
          POSTGRES_USER: nzif
          POSTGRES_DB: nzif_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout

      - run: gem install bundler

      - run: yarn global add bower

      # Restore Cached Dependencies
      - type: cache-restore
        name: Restore bundle cache
        key: nzif-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}

      # Bundle install dependencies
      - run: bundle install --path vendor/bundle

      - run: yarn install

      # Cache Dependencies
      - type: cache-save
        name: Store bundle cache
        key: nzif-{{ checksum "Gemfile.lock" }}-{{ checksum "yarn.lock" }}
        paths:
          - vendor/bundle
          - node_modules

      # Wait for DB
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run: sudo apt update && sudo apt-get install postgresql-client

      - run: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter

      - run: chmod +x ./cc-test-reporter

      # Setup the environment
      - run: cp config/application.yml.example config/application.yml

      # Setup the database
      - run: bundle exec rake db:setup

      - run: ./cc-test-reporter before-build

      # Run the tests
      - run: bundle exec rake

      - run: ./cc-test-reporter after-build

      - store_artifacts:
          path: ~/nzif/coverage
          destination: coverage
